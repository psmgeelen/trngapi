version: "3.9"

services:
#  api:
#    container_name: api
#    build: trng-api/api/
#    depends_on:
#      - timescaledb
#      - trng
  trng:
    container_name: trng
    build: trng-api/trng/
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    privileged: true # required for gettings access to hardware adapters
    restart: always
    env_file:
      - .env
    depends_on:
      timescaledb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "grep", "-q", "OK", "/tmp/health.ok"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --enable-lifecycle-hooks --monitor-only
    environment:
      - WATCHTOWER_POLL_INTERVAL=30  # Check every 30 seconds
      - WATCHTOWER_INCLUDE_RESTARTING=true
  timescaledb:
    container_name: timescaledb
    env_file:
      - .env
    image: timescale/timescaledb-ha:pg17
    restart: always
    environment:
      - PGDATA=/home/postgres/pgdata/data/pgdata
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - /mnt/timescaledb_large/docker_volume:/home/postgres/pgdata/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  trng:
    driver: "host"
  timescaledb:
    driver: local